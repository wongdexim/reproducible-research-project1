install.packages("swirl")
packageVersion("swirl")
swirl
swirl()
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color="manufacturer")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, .~drv\)
qplot(displ, hwy, data=mpg, .~drv)
qplot(displ, hwy, data=mpg, facets= .~drv)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
g<-ggplot(data=mpg, aes=(displ, hwy))
g<-ggplot(data=mpg, aes=("displ", "hwy"))
g<-ggplot(data=mpg, displ, hwy)
g<-ggplot(displ, hwy, data=mpg)
g<-ggplot(data=mpg, aes=(displ, hwy))
g<-ggplot(mpg, aes=(displ, hwy))
g <- ggplot(mpg,aes(displ,hwy))
g
summary(g)
g+Geom_point()
g+geom_point()
geom_smooth(g+geom_point())
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=.5)+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=.5)
g+geom_point(size=4, alpha=.5, color=drv)
g+geom_point(size=4, alpha=.5, color=aes(drv))
g+geom_point(size=4, alpha=.5, aes=("drv"))
g+geom_point(aes(color=drv), size=4, alpha=.5)
g+geom_point(aes(color=drv), labs="Swirl Rules!")
g+geom_point(aes(color=drv)+ labs(title="Swirl Rules!")+labs(x="Displacement", y= "Hwy Mileage")
\
g+geom_point(aes(color=drv)+ labs(title="Swirl Rules!")+labs(x="Displacement", y= "Hwy Mileage")
)
g+geom_point(aes(color=drv))+ labs(title="Swirl Rules!")+labs(x="Displacement", y= "Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=.5)+geom_smooth(size=4, linetype=2, method="lm", se= FALSE)
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se= FALSE)
g+geom_point(aes(color=drv)+theme_bw(base_family="Times")
)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
qplot(myx, myy, type="l", ylim=c(-3,3))
plot(myx, myy, type="l", ylim=c(-3,3))
qplot(aes(myx, myy), type="l", ylim=c(-3,3))
qplot(aes(myx, myy))
g <- ggplot(testdat, aes(x = myx, y = myy))
g+geomline()
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <-ggplot(x=displ, y=hwy, aes(color=factor(year))
)
g <-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margin=TRUE)
g+geom_point()+facet_grid(drv~cyl, margin=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margin=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qjplot(price, data=diamonds, binwidth=18397/30)
qplot(price, data=diamonds, binwidth=18397/30)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill = cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color="cut")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
qplot(carat, price, data=diamonds, color=cut)+ geom_smooth(methods="lm")
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")+ facets(.~cut)
qplot(carat, price, data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g<- ggplot(depth, price)
g<- ggplot(data,depth, price)
g<- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
quantile(diamonds$carat, seq, na.rm=TRUE)
cutpoints <-quantile(diamonds$carat, seq(0,1, length =4.), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints); stageVariable("diamonds$car2",diamonds$car2)
g <- ggplot(diamonds,aes(depth,price))
g + geom_point(alpha=1/3)+facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha=1/3)+facet_grid(cut ~ car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes("carat", "price"))+geom_boxplot()+facet_grid(~cut)
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
2
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
swirl()
dist(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h=1.4, col="blue")
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
abline(h=.5, col="red")
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red", "orange", "purple", pch=3, cex=2, lwd=2 ))
points(cx, cy, col=c("red", "orange", "purple", pch=3, cex=2, lwd=2)
)
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x, y, cx, xy)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy,  col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(y, newClust2, mean)
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy,  col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmobj$iter
km0bj$iter
kmObj$iter
plot(x,y, col = kmObj$Cluster, pch=19, cex=2)
plot(x,y,col=kmObj$Cluster, pch=19, cex=2)
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
svd1$u[,1]%*%svd1$d[1]
svd1$u[,1] * svd1$d[1]
a1<- (svd1$u[,1] * svd1$d[1])%*%t(sd$v[,1])
a1<- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
image(a1)\
image(a1)
myImage(a1)
a2 <- svd$u%*% t(svd1$v[2,])
a2 <- svd$u[,2]%*% t(svd1$v[2,])
a2 <- svd1$u[,2]%*% t(svd1$v[2,])
a2 <- svd1$u[,1:2]%*% diag(svd1$d[1:2]) %*% t(svd1$v[2,])
a2 <- svd1$u[,1:2]%*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5]%*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[562,563])
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<- subset(ssd, subject=1)
sub1<- subset(ssd, subject==1)
dim(sub1)
names(sub1)
names(sub1[1:12])
mededit("showXY.R")
myedit("showXY.R")
showMe()
showMe(sub1[1:6])
showMe(1:6)
mdist<-sub1[,1:3]
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(c(sub1[,10:12], maxCon)
)
mdist<-dist(c(sub1[,10:12], maxCon))
mdist<-dist(sub1[,10:12], maxCon)
mdist<-dist(sub1[,10:12])
mdist<-dist(sub1[,c(10:12, maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
sub1[maxCon]
names(sub1[maxCon])
kClust<- kmeans(sub1[,-c(562,563)], centers=7))
kClust<- kmeans(sub1[,-c(562,563)], centers=6)
table(kClust4cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust<- kmeans(sub1[,-c(562,563)], centers=6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying<-subset(kClust, kClust$size==29)
laying<-which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch=10, ylab="Laying Cluster")
plot(kClust$centers[laying, 1:12], pch=19, ylab="Laying Cluster")
names(sub1(1:3))
names(sub1[1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch=19, ylab="Walkdown Cluster")
setwd("C:\Users\WongD\Documents\R\R-3.3.1\r programming\reproducible research week 2")
setwd("C://Users//WongD//Documents//R//R-3.3.1//r programming//reproducible research week 2")
activity<-read.csv("activity.csv", header=TRUE)
head(activity)
ggplot2.histogram(data=steps)
library(ggplot2)
library("ggplot2")
library("dplyr")
ggplot2.histogram(data=steps)
ggplot2(data=steps)
rm(list=ls())
setwd("C://Users//WongD//Documents//R//R-3.3.1//r programming//reproducible research week 2")
activity<-read.csv("activity.csv", header=TRUE)
head(activity)
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
ggplot2.histogram(data=steps)
ggplot.histogram(data=steps)
qplot(activity$steps, geom="histogram")
daily<-group_by(activity, steps, date)
library(tidyr)
daily<-group_by(activity, steps, date)
library(dplyr)
daily<-group_by(activity, steps, date)
summarise_each(funs(sum))
head(daily)
daily
daily<-group_by(activity, date)
summarise_each(funs(sum))
head(daily)
summarise_each(funs(mean()))
head(daily)
head(activity)
library(lazyeval)
daily<-group_by(activity, date)
summarise_each(funs(mean()))
summarise_each(funs(mean)
)
head(daily)
daily<-group_by(activity, date)
daily<-summarise_each(funs(sum))
head(daily)
daily<-group_by(activity, date)
daily<-summarise_each(daily, funs(sum))
head(daily)
daily<-group_by(activity, date)
daily<-summarise_each(daily, total=sum(steps))
head(daily)
daily<-summarise_each(daily, funs(sum))
head(daily)
hist(steps)
hist(daily$steps)
ggplot(daily, aes(daily$steps))
ggplot(data=daily, aes(daily$steps))+geom_histogram()
mean<-mean(daily$steps)
daily_mean<-mean(daily$steps)
daily_median<-median(daily$steps)
daily_mean
daily_median
daily_mean<-mean(daily_mean, na.omit=TRUE)
daily_mean
daily_mean<-mean(daily_mean, na.rm=TRUE)
daily_mean
daily_mean<-mean(daily$steps, na.rm=TRUE)
daily_mean
daily_median<-median(daily$steps, na.rm=TRUE)
daily_median
5min<-group_by(activity, interval)
interval5<-group_by(activity, interval)
interval5<-summarise_each(interval5, funs(sum))
head(interval5)
interval5<-summarise_at(interval5, total=sum(steps))
head(interval5)
interval5<-aggregate(activity ~ interval, data, mean)
interval5<-aggregate(activity ~ interval, activity, mean)
interval5<-aggregate(interval, activity, mean)
interval5<-aggregate(activity$interval, activity, mean)
head(interval5)
interval5<-aggregate(steps ~ interval, activity, mean)
head(interval5)
interval5<-aggregate(activity$steps, activity$interval, mean)
interval5<-aggregate(activity$steps, by activity$interval, mean)
interval5<-aggregate(x= activity$steps, by = activity$interval, fun ="mean")
interval5<-aggregate(x= activity$steps, by = activity$interval, fUN ="mean")
interval5<-aggregate(x= activity$steps, by = activity$interval, FUN ="mean")
interval5<-aggregate(steps ~ interval, activity, mean)
interval5<-aggregate(steps ~ interval, activity, FUN = "mean")
head(interval5)
with(interval5, plot(steps, interval, type='l'))
with(interval5, plot(interval, steps, type='l'))
max(interval5$steps)
interval5[, max(steps)]
interval5[, max[steps]
]
interval5[, max[interval5$steps]]
interval5[, max(interval5$steps)]
max_steps_row <- which.max(interval5$steps)
interval5[max_steps_row, ]
summary(daily)
daily
imputed<-activity
interval5[1,]
interval5$steps[1,]
interval5$steps[1]
head(interval5)
interval5$steps[5]
interval5$steps[interval=5]
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
replacement<-imputed$interval[i]
imputed$steps[i]<-interval5$steps[replacement]
}
}
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
replacement<-imputed$interval[i]
print(replacement)
'imputed$steps[i]<-interval5$steps[replacement]
}
}
}
''
}
}
}
}
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
replacement<-imputed$interval[i]
print(replacement)
}
}
for (i in 1:10) {
if (is.na(imputed$steps[i])) {
replacement<-imputed$interval[i]
print(replacement)
}
}
for (i in 1:10) {
if (is.na(imputed$steps[i])) {
replacement<-imputed$interval[i]
print(replacement)
imputed$steps[i]<-interval5$steps[replacement]
}
}
head(interval5)
for (i in 1:10) {
if (is.na(imputed$steps[i])) {
replacement<-imputed$interval[i]
print(replacement)
imputed$steps[i]<-interval5$steps[interval==replacement]
}
}
for (i in 1:10) {
if (is.na(imputed$steps[i])) {
replacement<-imputed$interval[i]
print(replacement)
imputed$steps[i]<-interval5$steps[interval5$interval==replacement]
}
}
head(imputed)
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
replacement<-imputed$interval[i]
print(replacement)
imputed$steps[i]<-interval5$steps[interval==replacement]
}
}
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
replacement<-imputed$interval[i]
imputed$steps[i]<-interval5$steps[interval5$interval==replacement]
}
}
imputed_daily<-group_by(imputed, date)
imputed_daily<-summarise_each(imputed_daily, funs(sum))
head(imputed_daily)
hist(imputed_daily$steps)
par(mfrow=c(2,1))
imputed$date <- as.Date(imputed$date)
#create a vector of weekdays
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
#Use `%in%` and `weekdays` to create a logical vector
#convert to `factor` and specify the `levels/labels`
imputed$wDay <- factor((weekdays(imputed$date) %in% weekdays1),levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
)
head(imputed)
imputed_interval5<-aggregate(steps ~ interval ~ wDay, imputed, FUN = "mean")
imputed_interval5<-aggregate(steps ~ interval + wDay, imputed, FUN = "mean")
with(imputed_interval5$wDay=="weekend", plot(interval, steps, type='l'))
with(imputed_interval5$wDay=='weekend', plot(interval, steps, type='l'))
weekend_result<-imputed_interval5[wDay=='weekend']
weekend_result<-imputed[wDay=='weekend']
weekend_result<-imputed[which(wDay=='weekend'),]
head(imputed)
weekend_result<-imputed[which(wDay=='weekend'),]
imputed$wDay
weekend_result<- subset(imputed, wDay=="weekend")
head(weekend_result)
weekday_result<- subset(imputed, wDay=="weekday")
weekend_interval<-aggregate(steps ~ interval, weekend_result, FUN = "mean")
with(weekend_interval, plot(interval, steps, type='l'))
weekday_interval<-aggregate(steps ~ interval, weekday_result, FUN = "mean")
with(weekday_interval, plot(interval, steps, type='l'))
weekday_interval<-aggregate(steps ~ interval, weekday_result, FUN = "mean")
> with(weekday_interval, plot(interval, steps, type='l'))
